version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123

  api:
    build: .
    container_name: api
    depends_on:
      - rabbitmq
    environment:
      # App
      NODE_ENV: production
      PORT: 8080
      PREFIX: "/api"
      # MongoDB Atlas (read from project .env)
      MONGODB_URI: ${MONGODB_URI}
      # CORS (adjust as needed)
      CORS_ORIGIN: "*"
      # Admin seed (optional)
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-Admin@123}
      # JWT (provide your own secrets in a real setup)
      JWT_SECRET: ${JWT_SECRET:-changeme}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET:-changeme-refresh}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-1d}
      REFRESH_TOKEN_EXPIRES_IN: ${REFRESH_TOKEN_EXPIRES_IN:-7d}
      # Mail (optional)
      MAIL_USER: ${MAIL_USER:-}
      MAIL_PASS: ${MAIL_PASS:-}
      # Queue
      QUEUE_BACKEND: rabbitmq
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672
      # Keep consumer only in worker, not inside API
      START_QUEUE_CONSUMER: "false"
    ports:
      - "8080:8080"
    volumes:
      - ./videos:/app/videos
      - ./images:/app/images

  worker:
    build: .
    container_name: worker
    depends_on:
      - rabbitmq
    environment:
      NODE_ENV: production
      # MongoDB Atlas (read from project .env)
      MONGODB_URI: ${MONGODB_URI}
      # Queue
      QUEUE_BACKEND: rabbitmq
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672
      START_QUEUE_CONSUMER: "true"
      # Needed if service code relies on these
      JWT_SECRET: ${JWT_SECRET:-changeme}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET:-changeme-refresh}
    command: ["node", "src/workers/video.queue.worker.js"]
    volumes:
      - ./videos:/app/videos
      - ./images:/app/images
 